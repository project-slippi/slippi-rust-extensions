[workspace]
resolver = "2"

# Always build the ffi interface as the default project.
default-members = ["ffi"]

members = [
    "dolphin",
    "exi",
    "ffi",
    "game-reporter",
    "jukebox",
    "user",
]

# Ship the resulting dylib with debug information so we can figure out
# crashes easier, and swap panic behavior to "abort" to match C++ behavior.
# 
# We don't want to panic and attempt to unwind into C/C++ since that can cause
# undefined behavior.
[profile.release]
debug = true
panic = "abort"

[workspace.dependencies]
time = { version = "0.3.20", default-features = false, features = ["std", "local-offset"] }
serde = { version = "1", features = ["derive"] }
serde_json = { version = "1" }
serde_repr = { version = "0.1" }

# We disable the "attributes" feature as we don't currently need it and it brings
# in extra dependencies.
tracing = { version = "0.1", default-features = false, features = ["std"] }

ureq = { version = "2.7.1", features = ["json"] }

[patch.crates-io]
# We need to patch this dependency to fix a bug in Windows where a crash can occur
# due to a lurking `assert` in cpal's wasapi device handling. This can be removed once
# the fix is merged upstream.
#
# See the following links for more info:
#
#   - https://github.com/RustAudio/cpal/issues/796
#   - https://github.com/project-slippi/cpal/commit/b0058fc99e324e919cba099077f43db90ddada94
# 
# We have also added some extra logging ourselves to try to track down the source of the issue.
#
cpal = { git = "https://github.com/project-slippi/cpal.git", ref="1ec6b46495d702b067e5574cbda0cae2fc9dbae3" }
